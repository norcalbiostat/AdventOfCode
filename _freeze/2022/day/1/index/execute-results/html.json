{
  "hash": "6d3bab2c5a94b922d4bfc13cee02fb4b",
  "result": {
    "markdown": "---\ntitle: \"2022: Day 1\"\ndate: 2022-12-1\ncategories: [base R, lists]\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2022/day/1)\n\n## My solution \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# packages\nlibrary(dplyr)\n\n# import data\nraw <- read.delim(\"input.txt\", blank.lines.skip = FALSE, header = FALSE)\n\nraw <- rename(raw, calories = V1)\n```\n:::\n\n\nAssociate each entry with an elf. Each blank line indicates a new elf.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnext.elf <- c(1, which(is.na(raw))) # where do the next elfs start?\nn.elf <- length(next.elf)           # how many new elfs?\nraw$elfID <- 0                      # set index\n```\n:::\n\n\nindex elves\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(e in 1:(n.elf-1)){\n  raw$elfID[next.elf[e]:(next.elf[e+1]-1)] <- e\n}\n```\n:::\n\n\nadd the last elf\n\n::: {.cell}\n\n```{.r .cell-code}\nraw$elfID[next.elf[e+1]:NROW(raw)] <- n.elf\n```\n:::\n\n\nnow drop empty rows\n\n::: {.cell}\n\n```{.r .cell-code}\nelves <- na.omit(raw)\n```\n:::\n\n\n:::{.callout-warning icon=false}\n### ❓ Which elf has the most calories? \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelves %>% group_by(elfID) %>%\n  summarize(tot.cals = sum(calories)) %>%\n  arrange(desc(tot.cals)) %>% slice(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  elfID tot.cals\n  <dbl>    <int>\n1   189    68775\n```\n:::\n:::\n\n\n\n:::{.callout-warning icon=false}\n### ❓ How many calories are carried by the top three elves?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop3 <- elves %>% group_by(elfID) %>%\n  summarize(tot.cals = sum(calories)) %>%\n  arrange(desc(tot.cals)) %>% slice(1:3)\nsum(top3$tot.cals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 202585\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}