{
  "hash": "c65fd2b9b7c8d37aadb60781990cf22f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2024: Day 03 Mull it over\"\ndate: 2024-12-13\ncategories:\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2024/day/03)\n\nGoal: Multiply numbers using `mul(X,Y)` function. \nExcept instructions got corrupt and so there are incorrect symbols. \n\nx`mul(2,4)`%&mul[3,7]!@^do_not_`mul(5,5)`+mul(32,64]then(`mul(11,8)``mul(8,5)`)\nOnly the four highlighted sections are real `mul` instructions. Adding up the result of each instruction produces 161 (2*4 + 5*5 + 11*8 + 8*5).\n\n# Input data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aochelpers)\nindata <- readLines(\"~/GitHub/AdventOfCode/2024/day/3/input\") \n```\n:::\n\n\n# TLDR; Solutions\n\n## Part 1 ⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- stringr::str_extract_all(indata, \"\\\\mul\\\\(\\\\d+,\\\\d+\\\\)\")  |> unlist()\ndf <- data.frame(a = a)\ndf$a1 <- gsub(\"mul\", \"\", df$a)\n\ndf2 <- stringr::str_extract_all(df$a, \"\\\\d+\", simplify = TRUE) \ndf2 <- apply(df2, 2, as.numeric)\ndf2[,1]%*%df2[,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          [,1]\n[1,] 161289189\n```\n\n\n:::\n:::\n\n\n\n## Part 2 ⭐⭐\n\n::: {.callout-danger}\n### ❓  \n:::\n\n\n\n\n# Walkthrough / Explainer\n\n## Part 1\nClearly a regex problem.\n\n:::{.callout-exa icon=true}\n**Example Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexa <- \"xmul(2,4)%&mul[3,7]!@^do_not_mul(5,5)+mul(32,64]then(mul(11,8)mul(8,5))\"\n```\n:::\n\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- stringr::str_extract_all(exa, \"\\\\mul\\\\(\\\\d+,\\\\d+\\\\)\") |> unlist() \n```\n:::\n\n\nThrow it into a data frame, will automatically separate into rows. Now I can get out the #'s and multiply.  \n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(a = a)\ndf$a1 <- gsub(\"mul\", \"\", df$a)\n\ndf2 <- stringr::str_extract_all(df$a, \"\\\\d+\", simplify = TRUE) \ndf2 <- apply(df2, 2, as.numeric)\n```\n:::\n\n\nNow to do rowwise multiplication and sum it up\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2[,1]%*%df2[,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1]\n[1,]  161\n```\n\n\n:::\n:::\n\n\nWell.. the example matches. Time to see how jacked up the actual data is. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nindata <- readLines(\"~/GitHub/AdventOfCode/2024/day/3/input\") \n```\n:::\n\n\nIt's reading it in as multiple lines... when I don't think that was the intention. I think that's okay, when I `unlist` it combined it into one vector. \n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- stringr::str_extract_all(indata, \"\\\\mul\\\\(\\\\d+,\\\\d+\\\\)\")  |> unlist()\ndf <- data.frame(a = a)\ndf$a1 <- gsub(\"mul\", \"\", df$a)\n\ndf2 <- stringr::str_extract_all(df$a, \"\\\\d+\", simplify = TRUE) \ndf2 <- apply(df2, 2, as.numeric)\ndf2[,1]%*%df2[,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          [,1]\n[1,] 161289189\n```\n\n\n:::\n:::\n\n\nYep. that worked. Coolio\n\n\n## Part 2\n\nThere are two new instructions \n\n* The do() instruction enables future mul instructions.\n\t\t- The other mul instructions function normally, including the one at the end that gets re-enabled by a do() instruction.\n* The don't() instruction disables future mul instructions.\n\t\t- mul(5,5) and mul(11,8) instructions are disabled\n\t\t\n\n::: {.cell}\n\n```{.r .cell-code}\nexa2 <- \"xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))\"\n```\n:::\n\n\n\n\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Los_Angeles\n date     2024-12-13\n pandoc   3.1.11 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/aarch64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package    * version    date (UTC) lib source\n aochelpers * 0.1.0.9000 2024-12-02 [1] Github (EllaKaye/aochelpers@d4ccd91)\n\n [1] /Users/rdonatello/Library/R/arm64/4.4/library\n [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}